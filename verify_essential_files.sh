#!/bin/bash

# List of essential files
ESSENTIAL_FILES=(
  "scrape.md"
  "download_examples.sh"
  "extract_schema.md"
  "htmx_examples_schema.json"
  "process_htmx_examples.sh"
  "setup_db.sh"
  "setup_db.sql"
  "import_all_examples.py"
  "generate_embeddings.py"
  "setup_postgrest_api.sh"
  "setup_postgrest.sql"
  "postgrest.conf.example"
  "docker-compose.yml"
  ".env.example"
  "generate_config.py"
)

# Essential directories
ESSENTIAL_DIRS=(
  "examples"
  "processed_examples"
)

# Check if all essential files exist
echo "Checking for essential files..."
MISSING_FILES=0
for file in "${ESSENTIAL_FILES[@]}"; do
  if [ -f "$file" ]; then
    echo "‚úÖ $file"
  else
    echo "‚ùå $file (MISSING)"
    MISSING_FILES=$((MISSING_FILES+1))
  fi
done

# Check if all essential directories exist
echo -e "\nChecking for essential directories..."
MISSING_DIRS=0
for dir in "${ESSENTIAL_DIRS[@]}"; do
  if [ -d "$dir" ]; then
    echo "‚úÖ $dir/"
  else
    echo "‚ùå $dir/ (MISSING)"
    MISSING_DIRS=$((MISSING_DIRS+1))
  fi
done

# Check if .env file exists
echo -e "\nChecking for configuration files..."
if [ -f ".env" ]; then
  echo "‚úÖ .env"
else
  echo "‚ùå .env (MISSING) - You need to create this from .env.example"
  MISSING_FILES=$((MISSING_FILES+1))
fi

if [ -f "postgrest.conf" ]; then
  echo "‚úÖ postgrest.conf"
else
  echo "‚ùå postgrest.conf (MISSING) - This will be generated by setup_postgrest_api.sh"
fi

# Summary
echo -e "\nSummary:"
if [ $MISSING_FILES -eq 0 ] && [ $MISSING_DIRS -eq 0 ]; then
  echo "All essential files and directories are present! üéâ"
else
  echo "Missing $MISSING_FILES files and $MISSING_DIRS directories."
  echo "Please check the README.md for instructions on how to set up the project."
fi 